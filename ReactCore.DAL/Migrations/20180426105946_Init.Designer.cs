// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ReactCore.DAL;
using ReactCore.Domain;
using System;

namespace ReactCore.DAL.Migrations
{
    [DbContext(typeof(ReactCoreContext))]
    [Migration("20180426105946_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReactCore.DAL.Models.Agency", b =>
                {
                    b.Property<long>("UserId");

                    b.Property<int>("Bulk");

                    b.Property<string>("ContactName");

                    b.Property<int>("Individual");

                    b.Property<string>("Location");

                    b.Property<int>("Pickup");

                    b.HasKey("UserId");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("ReactCore.DAL.Models.AgencyManager", b =>
                {
                    b.Property<long>("UserId");

                    b.Property<long>("AgencyId");

                    b.HasKey("UserId");

                    b.ToTable("AgencyManagers");
                });

            modelBuilder.Entity("ReactCore.DAL.Models.Child", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Gender");

                    b.Property<string>("Name");

                    b.Property<long?>("OrderId");

                    b.Property<long>("RequestId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("RequestId");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("ReactCore.DAL.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AgencyId");

                    b.Property<string>("City");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DeliveryType");

                    b.Property<string>("FamilyName");

                    b.Property<int>("Status");

                    b.Property<string>("StreetAddress");

                    b.Property<long?>("VolunteerId");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ReactCore.DAL.Models.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AgencyId");

                    b.Property<string>("City");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DeliveryType");

                    b.Property<string>("FamilyName");

                    b.Property<int>("Status");

                    b.Property<string>("StreetAddress");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ReactCore.DAL.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<int>("Role");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ReactCore.DAL.Models.Volunteer", b =>
                {
                    b.Property<long>("UserId");

                    b.HasKey("UserId");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("ReactCore.DAL.Models.Agency", b =>
                {
                    b.HasOne("ReactCore.DAL.Models.User", "User")
                        .WithOne("Agency")
                        .HasForeignKey("ReactCore.DAL.Models.Agency", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ReactCore.DAL.Models.AgencyManager", b =>
                {
                    b.HasOne("ReactCore.DAL.Models.User", "User")
                        .WithOne("AgencyManager")
                        .HasForeignKey("ReactCore.DAL.Models.AgencyManager", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ReactCore.DAL.Models.Child", b =>
                {
                    b.HasOne("ReactCore.DAL.Models.Order", "Order")
                        .WithMany("Children")
                        .HasForeignKey("OrderId");

                    b.HasOne("ReactCore.DAL.Models.Request", "Request")
                        .WithMany("Children")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ReactCore.DAL.Models.Order", b =>
                {
                    b.HasOne("ReactCore.DAL.Models.Agency", "Agency")
                        .WithMany()
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ReactCore.DAL.Models.Volunteer", "Volunteer")
                        .WithMany("Orders")
                        .HasForeignKey("VolunteerId");
                });

            modelBuilder.Entity("ReactCore.DAL.Models.Request", b =>
                {
                    b.HasOne("ReactCore.DAL.Models.Agency", "Agency")
                        .WithMany("Requests")
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ReactCore.DAL.Models.Volunteer", b =>
                {
                    b.HasOne("ReactCore.DAL.Models.User", "User")
                        .WithOne("Volunteer")
                        .HasForeignKey("ReactCore.DAL.Models.Volunteer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
